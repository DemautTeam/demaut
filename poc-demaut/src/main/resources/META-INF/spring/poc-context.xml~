<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:ctx="http://www.springframework.org/schema/context"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd

http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <ctx:property-placeholder properties-ref="props"/>

    <ctx:component-scan base-package="ch.vd.pee.microbiz.poc" />

    <camel:camelContext trace="false" id="poc" xmlns="http://camel.apache.org/schema/spring" depends-on="activemq">

        <propertyPlaceholder id="properties" location="ref:props"/>

        <!--Ressources statiques et services de la prestation -->
        <route id="microbiz">
            <from uri="microbiz://{{demo1.rs.base.endpoint}}?resourceClasses=ch.vd.pee.microbiz.poc.microbiz.AnnexeRest&amp;annotatedAuthClasses=ch.vd.pee.microbiz.poc.microbiz.AnnexeRest&amp;auth=IAM&amp;serviceInstances=annexeRestImpl"/>
            <transacted ref="required"/>
            <choice>
                <when>
                    <simple>${header.operationName} == "mainData"</simple>
                    <process ref="mainProcessor"/>
		    <log message="Operation name header = ${header.operationName}."/>
                </when>
                <when>
                    <simple>${header.operationName} == "test1"</simple>
                    <process ref="test1Processor" />
                </when>
		<otherwise>
                    <log message="Unknown operation name header ${header.operationName}."/>
                </otherwise>
            </choice>
        </route>

    </camel:camelContext>



    <bean id="ack" class="ch.vd.technical.esb.camel.AckEsbMessageProcessor">
        <property name="application" value="microbiz-demo1"/>
        <property name="domain" value="socle"/>
    </bean>


    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start"
          destroy-method="stop">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="maxConnections" value="10"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="pooledConnectionFactory"/>
    </bean>

    <bean id="required" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id="jmsConfiguration" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="pooledConnectionFactory"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transacted" value="true"/>
        <property name="cacheLevelName" value="CACHE_CONSUMER"/>
    </bean>

    <bean id="activemq" class="org.apache.camel.component.jms.JmsComponent">
        <property name="configuration" ref="jmsConfiguration"/>
    </bean>

<!-- enables interpretation of the @PersistenceUnit/@PersistenceContext annotations providing convenient
         access to EntityManagerFactory/EntityManager -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter">
        <property name="databasePlatform" value="${database.jpa.dictionary}"/>
        <property name="database" value="${database.jpa.type}"/>
        <property name="showSql" value="true"/>
        <property name="generateDdl" value="true"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <constructor-arg type="java.lang.String" value="${database.driverClassName}"/>
        <constructor-arg type="java.lang.String" value="${database.url}"/>
        <constructor-arg type="java.lang.String" value="${database.username}"/>
        <constructor-arg type="java.lang.String" value="${database.password}"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceUnitName" value="demaut-data"/>
        <property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"/>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.OpenJpaDialect"/>
        </property>
        <property name="jpaVendorAdapter" ref="jpaAdapter"/>
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
    </bean>

    <!-- TransactionManager is required -->
    <bean id="transactionManagerDemaut" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManagerDemaut"/>
    <tx:annotation-config/>

</beans>
